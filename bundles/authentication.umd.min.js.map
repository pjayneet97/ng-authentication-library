{"version":3,"sources":["ng://authentication/lib/authentication.service.ts","ng://authentication/lib/authentication.component.ts","ng://authentication/lib/authentication.module.ts"],"names":["AuthenticationService","afAuth","_this","this","authInfo","authType","windowRef","window","authState","subscribe","res","emailVerified","mode","prototype","isAuthenticated","googleLogin","auth","signInWithPopup","GoogleAuthProvider","loginWithEmail","email","password","signInWithEmailAndPassword","createUserWithEmail","photoURL","displayName","createUserWithEmailAndPassword","then","updateProfile","sendEmailVerification","signInWithPhone","phoneNo","appVerifier","recaptchaVerifier","signInWithPhoneNumber","resend","verifyOTP","otp","confirmationResult","confirm","logOut","signOut","getauthDetails","currentUser","updatePassword","newPassword","isEmailVerified","Injectable","args","providedIn","AngularFireAuth","AuthenticationComponent","loading","ngOnInit","firebase.auth","RecaptchaVerifier","size","callback","response","render","signInWithGoogle","console","log","catch","err","alert","signInWithEmail","formData","sendOTP","phone","toString","result","error","varify","signupwithemail","name","Component","selector","template","AuthenticationModule","NgModule","declarations","imports","AngularFireModule","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","AngularFireAuthModule","CommonModule","FormsModule","exports"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { auth } from 'firebase/app';\nimport * as firebase from 'firebase'; \n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n  authInfo=null;\n  windowRef:any;\n  mode;\n  authType=null;\n  constructor(public afAuth:AngularFireAuth) {\n    this.windowRef = window;\n    afAuth.authState.subscribe(res=>{\n      this.authInfo=res;\n      if(this.authType=='email'){\n        if(res){\n          if(res.emailVerified){\n            this.mode='successful'\n          }\n          else{\n            this.mode='emailverify'\n          }\n        }\n      }\n      else if(this.authType=='phone'){\n        this.mode='successful';\n      }\n    })\n   }\n\n  isAuthenticated(){\n    if(this.authInfo){\n      return true;\n    }\n    else{\n      return false;\n    }\n  }\n  googleLogin() {\n    this.authType='email';\n    return this.afAuth.auth.signInWithPopup(new auth.GoogleAuthProvider())\n  }\n  loginWithEmail(email:string,password:string){\n    this.authType='email';\n    return this.afAuth.auth.signInWithEmailAndPassword(email,password);\n  }\n  createUserWithEmail(email,password,photoURL,displayName){\n    this.authType='email';\n    return this.afAuth.auth.createUserWithEmailAndPassword(email,password).then(res=>{\n      this.updateProfile(displayName,photoURL);\n      this.sendEmailVerification()\n    })\n  }\n  signInWithPhone(phoneNo) {\n    this.authType='phone';\n    const appVerifier = this.windowRef.recaptchaVerifier;\n    return this.afAuth.auth.signInWithPhoneNumber(phoneNo,appVerifier)\n  }\n\n  resend(phoneNo){\n    this.authType='phone'\n    const appVerifier = this.windowRef.recaptchaVerifier;\n    return this.afAuth.auth.signInWithPhoneNumber(phoneNo,appVerifier)\n  }\n\n  verifyOTP(otp) {\n    this.authType='phone';\n    return this.windowRef.confirmationResult.confirm(otp)\n  }\n\n  logOut() {\n    this.authInfo=null;\n    return this.afAuth.auth.signOut();\n  }\n  getauthDetails(){\n    return this.authInfo;\n  }\n  sendEmailVerification(){\n    this.afAuth.auth.currentUser.sendEmailVerification()\n  }\n  updateProfile(displayName,photoURL){\n    return this.afAuth.auth.currentUser.updateProfile({displayName,photoURL})\n  }\n  updatePassword(newPassword){\n    return this.afAuth.auth.currentUser.updatePassword(newPassword)\n  }\n  isEmailVerified(){\n    return this.authInfo.emailVerified\n  }\n\n\n\n  \n}\n","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from './authentication.service';\nimport * as firebase from 'firebase';\n@Component({\n  selector: 'lib-authentication',\n  templateUrl: './authentication.component.html',\n  styleUrls: ['./authentication.component.scss']\n})\nexport class AuthenticationComponent implements OnInit {\n  phone\n  loading=false;\n  constructor(public auth:AuthenticationService) { }\n\n  ngOnInit() {\n    this.auth.mode='emaillogin';\n    this.auth.windowRef.recaptchaVerifier = new firebase.auth.RecaptchaVerifier('recaptcha', {\n      size: 'invisible',\n      callback(response) {\n        // reCAPTCHA solved, allow signInWithPhoneNumber.\n        this.auth.signInWithPhone();\n      }\n    });\n    this.auth.windowRef.recaptchaVerifier.render();\n  }\n  signInWithGoogle(){\n    this.loading=true;\n    this.auth.googleLogin().then(res=>{\n      this.loading=false\n      console.log(res)\n    }).catch(err=>{\n      alert(\"error\")\n      this.loading=false;\n    })\n  }\n  signInWithEmail(formData){\n    this.loading=true;\n    this.auth.loginWithEmail(formData.email,formData.password).then(res=>{\n      console.log(res)\n      this.loading=false;\n    })\n  }\n\n  logOut(){\n    this.loading=true;\n    this.auth.logOut().then(res=>{\n      this.auth.mode='emaillogin';\n      this.loading=false\n    })\n  }\n\n  sendOTP(formData) {\n    if (formData.phone) { \n      this.loading=true;\n       this.phone = '+91' + formData.phone.toString();\n      this.auth.signInWithPhone(this.phone).then(result => {\n      this.auth.windowRef.confirmationResult = result;\n      this.auth.mode='verifyotp'\n      this.loading=false;\n      console.log(\"otp Sent\")\n    })\n    .catch( error => {\n      console.log(error);\n      alert(\"error occoured\");\n      this.loading=false\n    }); }\n  }\n\n  varify(otp) {\n    if (otp) {\n      this.auth.verifyOTP(otp.toString());\n    }\n  }\n  resend(){\n    this.auth.resend(this.phone);\n  }\n  signupwithemail(formData){\n    this.loading=true\n    this.auth.createUserWithEmail(formData.email,formData.password,\"\",formData.name).then(res=>{\n      this.loading=false\n    })\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { AuthenticationComponent } from './authentication.component';\nimport { AngularFireModule } from '@angular/fire';\nimport { AngularFireAuthModule } from '@angular/fire/auth';\nimport { CommonModule } from '@angular/common';  \n\nimport { FormsModule }   from '@angular/forms';\n\n\n@NgModule({\n  declarations: [AuthenticationComponent],\n  imports: [\n    AngularFireModule.initializeApp({\n      apiKey: \"AIzaSyCG0rcc-R7bBSSgoJD4V7FsEW9S_rCvPgc\",\n      authDomain: \"chat-8a723.firebaseapp.com\",\n      databaseURL: \"https://chat-8a723.firebaseio.com\",\n      projectId: \"chat-8a723\",\n      storageBucket: \"chat-8a723.appspot.com\",\n      messagingSenderId: \"868038804017\",\n      appId: \"1:868038804017:web:e0f3f645ba1e06a2948b10\",\n      measurementId: \"G-RFY323LJ3K\"\n    }),\n    AngularFireAuthModule,\n    CommonModule,\n    FormsModule\n  ],\n  exports: [AuthenticationComponent]\n})\nexport class AuthenticationModule { }\n"]}